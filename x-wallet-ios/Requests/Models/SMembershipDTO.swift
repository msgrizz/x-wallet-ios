//
// SMembershipDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class SMembershipDTO: Codable {

    public enum MembershipType: String, Codable { 
        case vip = "VIP"
        case work = "Work"
        case studentID = "StudentID"
    }
    public var name: String?
    public var expireAt: Int64?
    public var logo: String?
    public var remarks: String?
    public var creator: Int64?
    public var membershipType: MembershipType?


    
    public init(name: String?, expireAt: Int64?, logo: String?, remarks: String?, creator: Int64?, membershipType: MembershipType?) {
        self.name = name
        self.expireAt = expireAt
        self.logo = logo
        self.remarks = remarks
        self.creator = creator
        self.membershipType = membershipType
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(expireAt, forKey: "expireAt")
        try container.encodeIfPresent(logo, forKey: "logo")
        try container.encodeIfPresent(remarks, forKey: "remarks")
        try container.encodeIfPresent(creator, forKey: "creator")
        try container.encodeIfPresent(membershipType, forKey: "membershipType")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        name = try container.decodeIfPresent(String.self, forKey: "name")
        expireAt = try container.decodeIfPresent(Int64.self, forKey: "expireAt")
        logo = try container.decodeIfPresent(String.self, forKey: "logo")
        remarks = try container.decodeIfPresent(String.self, forKey: "remarks")
        creator = try container.decodeIfPresent(Int64.self, forKey: "creator")
        membershipType = try container.decodeIfPresent(MembershipType.self, forKey: "membershipType")
    }
}

