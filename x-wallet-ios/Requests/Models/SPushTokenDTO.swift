//
// SPushTokenDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class SPushTokenDTO: Codable {

    public enum DeviceType: String, Codable { 
        case android = "Android"
        case ios = "iOS"
    }
    public var deviceType: DeviceType?
    /** Android 端为 个推 clientID iOS 端为 deviceType */
    public var pushToken: String?
    public var accountId: Int64?


    
    public init(deviceType: DeviceType?, pushToken: String?, accountId: Int64?) {
        self.deviceType = deviceType
        self.pushToken = pushToken
        self.accountId = accountId
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(deviceType, forKey: "deviceType")
        try container.encodeIfPresent(pushToken, forKey: "pushToken")
        try container.encodeIfPresent(accountId, forKey: "accountId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        deviceType = try container.decodeIfPresent(DeviceType.self, forKey: "deviceType")
        pushToken = try container.decodeIfPresent(String.self, forKey: "pushToken")
        accountId = try container.decodeIfPresent(Int64.self, forKey: "accountId")
    }
}

