//
// SNotificationDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class SNotificationDTO: Codable {

    public var sender: Int64?
    public var receiver: Int64?
    public var title: String?
    public var action: String?
    public var data: String?


    
    public init(sender: Int64?, receiver: Int64?, title: String?, action: String?, data: String?) {
        self.sender = sender
        self.receiver = receiver
        self.title = title
        self.action = action
        self.data = data
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(sender, forKey: "sender")
        try container.encodeIfPresent(receiver, forKey: "receiver")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(action, forKey: "action")
        try container.encodeIfPresent(data, forKey: "data")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        sender = try container.decodeIfPresent(Int64.self, forKey: "sender")
        receiver = try container.decodeIfPresent(Int64.self, forKey: "receiver")
        title = try container.decodeIfPresent(String.self, forKey: "title")
        action = try container.decodeIfPresent(String.self, forKey: "action")
        data = try container.decodeIfPresent(String.self, forKey: "data")
    }
}

