//
// MiniCoinPoolDashBoardDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class MiniCoinPoolDashBoardDTO: Codable {

    public var important: Bool?
    public var issuedByMe: Bool?
    public var limitNum: Int64?
    public var miniCoinPoolId: Int64?
    public var miniCoinPoolName: String?
    public var ownNum: Int64?


    
    public init(important: Bool?, issuedByMe: Bool?, limitNum: Int64?, miniCoinPoolId: Int64?, miniCoinPoolName: String?, ownNum: Int64?) {
        self.important = important
        self.issuedByMe = issuedByMe
        self.limitNum = limitNum
        self.miniCoinPoolId = miniCoinPoolId
        self.miniCoinPoolName = miniCoinPoolName
        self.ownNum = ownNum
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(important, forKey: "important")
        try container.encodeIfPresent(issuedByMe, forKey: "issuedByMe")
        try container.encodeIfPresent(limitNum, forKey: "limitNum")
        try container.encodeIfPresent(miniCoinPoolId, forKey: "miniCoinPoolId")
        try container.encodeIfPresent(miniCoinPoolName, forKey: "miniCoinPoolName")
        try container.encodeIfPresent(ownNum, forKey: "ownNum")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        important = try container.decodeIfPresent(Bool.self, forKey: "important")
        issuedByMe = try container.decodeIfPresent(Bool.self, forKey: "issuedByMe")
        limitNum = try container.decodeIfPresent(Int64.self, forKey: "limitNum")
        miniCoinPoolId = try container.decodeIfPresent(Int64.self, forKey: "miniCoinPoolId")
        miniCoinPoolName = try container.decodeIfPresent(String.self, forKey: "miniCoinPoolName")
        ownNum = try container.decodeIfPresent(Int64.self, forKey: "ownNum")
    }
}

