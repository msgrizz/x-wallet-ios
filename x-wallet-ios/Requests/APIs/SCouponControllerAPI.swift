//
// SCouponControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SCouponControllerAPI {
    /**
     add
     
     - parameter sCouponDTO: (body) sCouponDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addUsingPOST1(sCouponDTO: SCouponDTO, completion: @escaping ((_ data: SCoupon?,_ error: Error?) -> Void)) {
        addUsingPOST1WithRequestBuilder(sCouponDTO: sCouponDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     add
     - POST /sCoupons
     - examples: [{output=none}]
     
     - parameter sCouponDTO: (body) sCouponDTO 

     - returns: RequestBuilder<SCoupon> 
     */
    open class func addUsingPOST1WithRequestBuilder(sCouponDTO: SCouponDTO) -> RequestBuilder<SCoupon> {
        let path = "/sCoupons"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sCouponDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SCoupon>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     mySCoupons
     
     - parameter accountId: (query) accountId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func mySCouponsUsingGET(accountId: Int64, completion: @escaping ((_ data: [String:[SCoupon]]?,_ error: Error?) -> Void)) {
        mySCouponsUsingGETWithRequestBuilder(accountId: accountId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     mySCoupons
     - GET /mySCoupons
     - examples: [{output=none}]
     
     - parameter accountId: (query) accountId 

     - returns: RequestBuilder<[String:[SCoupon]]> 
     */
    open class func mySCouponsUsingGETWithRequestBuilder(accountId: Int64) -> RequestBuilder<[String:[SCoupon]]> {
        let path = "/mySCoupons"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "accountId": accountId.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<[String:[SCoupon]]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     revokeOrDeleteSCoupon
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func revokeOrDeleteSCouponUsingPOST(id: Int64, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        revokeOrDeleteSCouponUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     revokeOrDeleteSCoupon
     - POST /revokeOrDeleteSCoupon/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<Bool> 
     */
    open class func revokeOrDeleteSCouponUsingPOSTWithRequestBuilder(id: Int64) -> RequestBuilder<Bool> {
        var path = "/revokeOrDeleteSCoupon/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sCouponTrack
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sCouponTrackUsingGET(id: Int64, completion: @escaping ((_ data: [SCouponOwner]?,_ error: Error?) -> Void)) {
        sCouponTrackUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sCouponTrack
     - GET /sCouponTrack/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<[SCouponOwner]> 
     */
    open class func sCouponTrackUsingGETWithRequestBuilder(id: Int64) -> RequestBuilder<[SCouponOwner]> {
        var path = "/sCouponTrack/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[SCouponOwner]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sCoupons
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sCouponsUsingGET(id: Int64, completion: @escaping ((_ data: SCoupon?,_ error: Error?) -> Void)) {
        sCouponsUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sCoupons
     - GET /sCoupons/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<SCoupon> 
     */
    open class func sCouponsUsingGETWithRequestBuilder(id: Int64) -> RequestBuilder<SCoupon> {
        var path = "/sCoupons/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SCoupon>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     send
     
     - parameter id: (path) id 
     - parameter sendSCouponDTO: (body) sendSCouponDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sendUsingPOST(id: Int64, sendSCouponDTO: SendSCouponDTO, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        sendUsingPOSTWithRequestBuilder(id: id, sendSCouponDTO: sendSCouponDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     send
     - POST /sendSCoupon/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter sendSCouponDTO: (body) sendSCouponDTO 

     - returns: RequestBuilder<Bool> 
     */
    open class func sendUsingPOSTWithRequestBuilder(id: Int64, sendSCouponDTO: SendSCouponDTO) -> RequestBuilder<Bool> {
        var path = "/sendSCoupon/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sendSCouponDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     setSCouponImportant
     
     - parameter id: (path) id 
     - parameter sCouponOwnerDTO: (body) sCouponOwnerDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func setSCouponImportantUsingPOST(id: Int64, sCouponOwnerDTO: SCouponOwnerDTO, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        setSCouponImportantUsingPOSTWithRequestBuilder(id: id, sCouponOwnerDTO: sCouponOwnerDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     setSCouponImportant
     - POST /setSCouponImportant/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter sCouponOwnerDTO: (body) sCouponOwnerDTO 

     - returns: RequestBuilder<Bool> 
     */
    open class func setSCouponImportantUsingPOSTWithRequestBuilder(id: Int64, sCouponOwnerDTO: SCouponOwnerDTO) -> RequestBuilder<Bool> {
        var path = "/setSCouponImportant/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sCouponOwnerDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     transferSCoupon
     
     - parameter id: (path) id 
     - parameter sCouponOwnerDTO: (body) sCouponOwnerDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func transferSCouponUsingPOST(id: Int64, sCouponOwnerDTO: SCouponOwnerDTO, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        transferSCouponUsingPOSTWithRequestBuilder(id: id, sCouponOwnerDTO: sCouponOwnerDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     transferSCoupon
     - POST /transferSCoupon/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter sCouponOwnerDTO: (body) sCouponOwnerDTO 

     - returns: RequestBuilder<Bool> 
     */
    open class func transferSCouponUsingPOSTWithRequestBuilder(id: Int64, sCouponOwnerDTO: SCouponOwnerDTO) -> RequestBuilder<Bool> {
        var path = "/transferSCoupon/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sCouponOwnerDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     update
     
     - parameter id: (path) id 
     - parameter sCouponDTO: (body) sCouponDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateUsingPOST(id: Int64, sCouponDTO: SCouponDTO, completion: @escaping ((_ data: SCoupon?,_ error: Error?) -> Void)) {
        updateUsingPOSTWithRequestBuilder(id: id, sCouponDTO: sCouponDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     update
     - POST /updateSCoupon/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter sCouponDTO: (body) sCouponDTO 

     - returns: RequestBuilder<SCoupon> 
     */
    open class func updateUsingPOSTWithRequestBuilder(id: Int64, sCouponDTO: SCouponDTO) -> RequestBuilder<SCoupon> {
        var path = "/updateSCoupon/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sCouponDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SCoupon>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     useSCoupon
     
     - parameter id: (path) id 
     - parameter useSCouponDTO: (body) useSCouponDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func useSCouponUsingPOST(id: Int64, useSCouponDTO: UseSCouponDTO, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        useSCouponUsingPOSTWithRequestBuilder(id: id, useSCouponDTO: useSCouponDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     useSCoupon
     - POST /useSCoupon/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter useSCouponDTO: (body) useSCouponDTO 

     - returns: RequestBuilder<Bool> 
     */
    open class func useSCouponUsingPOSTWithRequestBuilder(id: Int64, useSCouponDTO: UseSCouponDTO) -> RequestBuilder<Bool> {
        var path = "/useSCoupon/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: useSCouponDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
