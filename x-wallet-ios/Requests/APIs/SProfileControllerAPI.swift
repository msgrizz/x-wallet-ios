//
// SProfileControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SProfileControllerAPI {
    /**
     add
     
     - parameter sProfileDTO: (body) sProfileDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addUsingPOST4(sProfileDTO: SProfileDTO, completion: @escaping ((_ data: SProfile?,_ error: Error?) -> Void)) {
        addUsingPOST4WithRequestBuilder(sProfileDTO: sProfileDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     add
     - POST /sProfiles
     - examples: [{output=none}]
     
     - parameter sProfileDTO: (body) sProfileDTO 

     - returns: RequestBuilder<SProfile> 
     */
    open class func addUsingPOST4WithRequestBuilder(sProfileDTO: SProfileDTO) -> RequestBuilder<SProfile> {
        let path = "/sProfiles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sProfileDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SProfile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     delSProfiles
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func delSProfilesUsingPOST(id: Int64, completion: @escaping ((_ error: Error?) -> Void)) {
        delSProfilesUsingPOSTWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     delSProfiles
     - POST /delSProfiles/{id}
     
     - parameter id: (path) id 

     - returns: RequestBuilder<Void> 
     */
    open class func delSProfilesUsingPOSTWithRequestBuilder(id: Int64) -> RequestBuilder<Void> {
        var path = "/delSProfiles/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     getOne
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOneUsingGET5(id: Int64, completion: @escaping ((_ data: SProfile?,_ error: Error?) -> Void)) {
        getOneUsingGET5WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     getOne
     - GET /sProfiles/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<SProfile> 
     */
    open class func getOneUsingGET5WithRequestBuilder(id: Int64) -> RequestBuilder<SProfile> {
        var path = "/sProfiles/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SProfile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sProfiles
     
     - parameter accountId: (query) accountId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sProfilesUsingGET(accountId: Int64, completion: @escaping ((_ data: [SProfile]?,_ error: Error?) -> Void)) {
        sProfilesUsingGETWithRequestBuilder(accountId: accountId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sProfiles
     - GET /sProfiles
     - examples: [{output=none}]
     
     - parameter accountId: (query) accountId 

     - returns: RequestBuilder<[SProfile]> 
     */
    open class func sProfilesUsingGETWithRequestBuilder(accountId: Int64) -> RequestBuilder<[SProfile]> {
        let path = "/sProfiles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "accountId": accountId.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<[SProfile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     updateSProfiles
     
     - parameter id: (path) id 
     - parameter updateSProfileDTO: (body) updateSProfileDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateSProfilesUsingPOST(id: Int64, updateSProfileDTO: UpdateSProfileDTO, completion: @escaping ((_ data: SProfile?,_ error: Error?) -> Void)) {
        updateSProfilesUsingPOSTWithRequestBuilder(id: id, updateSProfileDTO: updateSProfileDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     updateSProfiles
     - POST /updateSProfiles/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter updateSProfileDTO: (body) updateSProfileDTO 

     - returns: RequestBuilder<SProfile> 
     */
    open class func updateSProfilesUsingPOSTWithRequestBuilder(id: Int64, updateSProfileDTO: UpdateSProfileDTO) -> RequestBuilder<SProfile> {
        var path = "/updateSProfiles/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: updateSProfileDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SProfile>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
