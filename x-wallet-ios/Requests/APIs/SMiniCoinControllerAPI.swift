//
// SMiniCoinControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SMiniCoinControllerAPI {
    /**
     getByPoolId
     
     - parameter id: (query) id 
     - parameter page: (query)  (optional)
     - parameter size: (query)  (optional)
     - parameter sort: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getByPoolIdUsingGET(id: Int64, page: Int? = nil, size: Int? = nil, sort: String? = nil, completion: @escaping ((_ data: PageSMiniCoin?,_ error: Error?) -> Void)) {
        getByPoolIdUsingGETWithRequestBuilder(id: id, page: page, size: size, sort: sort).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     getByPoolId
     - GET /sMiniCoinsByPool
     - examples: [{output=none}]
     
     - parameter id: (query) id 
     - parameter page: (query)  (optional)
     - parameter size: (query)  (optional)
     - parameter sort: (query)  (optional)

     - returns: RequestBuilder<PageSMiniCoin> 
     */
    open class func getByPoolIdUsingGETWithRequestBuilder(id: Int64, page: Int? = nil, size: Int? = nil, sort: String? = nil) -> RequestBuilder<PageSMiniCoin> {
        let path = "/sMiniCoinsByPool"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "id": id.encodeToJSON(), 
            "page": page?.encodeToJSON(), 
            "size": size?.encodeToJSON(), 
            "sort": sort
        ])
        

        let requestBuilder: RequestBuilder<PageSMiniCoin>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     transferMany
     
     - parameter transferManyDTO: (body) transferManyDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func transferManyUsingPOST(transferManyDTO: TransferManyDTO, completion: @escaping ((_ data: Bool?,_ error: Error?) -> Void)) {
        transferManyUsingPOSTWithRequestBuilder(transferManyDTO: transferManyDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     transferMany
     - POST /transferMany
     - examples: [{output=none}]
     
     - parameter transferManyDTO: (body) transferManyDTO 

     - returns: RequestBuilder<Bool> 
     */
    open class func transferManyUsingPOSTWithRequestBuilder(transferManyDTO: TransferManyDTO) -> RequestBuilder<Bool> {
        let path = "/transferMany"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: transferManyDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Bool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     transfer
     
     - parameter id: (path) id 
     - parameter sMiniCoinDTO: (body) sMiniCoinDTO 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func transferUsingPOST(id: Int64, sMiniCoinDTO: SMiniCoinDTO, completion: @escaping ((_ data: SMiniCoin?,_ error: Error?) -> Void)) {
        transferUsingPOSTWithRequestBuilder(id: id, sMiniCoinDTO: sMiniCoinDTO).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     transfer
     - POST /transfer/{id}
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter sMiniCoinDTO: (body) sMiniCoinDTO 

     - returns: RequestBuilder<SMiniCoin> 
     */
    open class func transferUsingPOSTWithRequestBuilder(id: Int64, sMiniCoinDTO: SMiniCoinDTO) -> RequestBuilder<SMiniCoin> {
        var path = "/transfer/{id}"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sMiniCoinDTO)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SMiniCoin>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
