//
// SAccountSMiniCoinPoolEntityAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SAccountSMiniCoinPoolEntityAPI {
    /**
     sAccountSMiniCoinPoolAccount
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolAccountUsingDELETE(id: Int64, completion: @escaping ((_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolAccountUsingDELETEWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     sAccountSMiniCoinPoolAccount
     - DELETE /sAccountSMiniCoinPools/{id}/account
     
     - parameter id: (path) id 

     - returns: RequestBuilder<Void> 
     */
    open class func sAccountSMiniCoinPoolAccountUsingDELETEWithRequestBuilder(id: Int64) -> RequestBuilder<Void> {
        var path = "/sAccountSMiniCoinPools/{id}/account"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sAccountSMiniCoinPoolAccount
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolAccountUsingGET(id: Int64, completion: @escaping ((_ data: ResourceSAccount?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolAccountUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolAccount
     - GET /sAccountSMiniCoinPools/{id}/account
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<ResourceSAccount> 
     */
    open class func sAccountSMiniCoinPoolAccountUsingGETWithRequestBuilder(id: Int64) -> RequestBuilder<ResourceSAccount> {
        var path = "/sAccountSMiniCoinPools/{id}/account"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSAccount>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sAccountSMiniCoinPoolAccount
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolAccountUsingPATCH(id: Int64, body: String, completion: @escaping ((_ data: ResourceSAccount?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolAccountUsingPATCHWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolAccount
     - PATCH /sAccountSMiniCoinPools/{id}/account
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSAccount> 
     */
    open class func sAccountSMiniCoinPoolAccountUsingPATCHWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSAccount> {
        var path = "/sAccountSMiniCoinPools/{id}/account"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSAccount>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     sAccountSMiniCoinPoolAccount
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolAccountUsingPOST(id: Int64, body: String, completion: @escaping ((_ data: ResourceSAccount?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolAccountUsingPOSTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolAccount
     - POST /sAccountSMiniCoinPools/{id}/account
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSAccount> 
     */
    open class func sAccountSMiniCoinPoolAccountUsingPOSTWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSAccount> {
        var path = "/sAccountSMiniCoinPools/{id}/account"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSAccount>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     sAccountSMiniCoinPoolAccount
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolAccountUsingPUT(id: Int64, body: String, completion: @escaping ((_ data: ResourceSAccount?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolAccountUsingPUTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolAccount
     - PUT /sAccountSMiniCoinPools/{id}/account
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSAccount> 
     */
    open class func sAccountSMiniCoinPoolAccountUsingPUTWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSAccount> {
        var path = "/sAccountSMiniCoinPools/{id}/account"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSAccount>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     sAccountSMiniCoinPoolMiniCoinPool
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingDELETE(id: Int64, completion: @escaping ((_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolMiniCoinPoolUsingDELETEWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     sAccountSMiniCoinPoolMiniCoinPool
     - DELETE /sAccountSMiniCoinPools/{id}/miniCoinPool
     
     - parameter id: (path) id 

     - returns: RequestBuilder<Void> 
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingDELETEWithRequestBuilder(id: Int64) -> RequestBuilder<Void> {
        var path = "/sAccountSMiniCoinPools/{id}/miniCoinPool"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sAccountSMiniCoinPoolMiniCoinPool
     
     - parameter id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingGET(id: Int64, completion: @escaping ((_ data: ResourceSMiniCoinPool?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolMiniCoinPoolUsingGETWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolMiniCoinPool
     - GET /sAccountSMiniCoinPools/{id}/miniCoinPool
     - examples: [{output=none}]
     
     - parameter id: (path) id 

     - returns: RequestBuilder<ResourceSMiniCoinPool> 
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingGETWithRequestBuilder(id: Int64) -> RequestBuilder<ResourceSMiniCoinPool> {
        var path = "/sAccountSMiniCoinPools/{id}/miniCoinPool"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSMiniCoinPool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     sAccountSMiniCoinPoolMiniCoinPool
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPATCH(id: Int64, body: String, completion: @escaping ((_ data: ResourceSMiniCoinPool?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolMiniCoinPoolUsingPATCHWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolMiniCoinPool
     - PATCH /sAccountSMiniCoinPools/{id}/miniCoinPool
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSMiniCoinPool> 
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPATCHWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSMiniCoinPool> {
        var path = "/sAccountSMiniCoinPools/{id}/miniCoinPool"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSMiniCoinPool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     sAccountSMiniCoinPoolMiniCoinPool
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPOST(id: Int64, body: String, completion: @escaping ((_ data: ResourceSMiniCoinPool?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolMiniCoinPoolUsingPOSTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolMiniCoinPool
     - POST /sAccountSMiniCoinPools/{id}/miniCoinPool
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSMiniCoinPool> 
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPOSTWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSMiniCoinPool> {
        var path = "/sAccountSMiniCoinPools/{id}/miniCoinPool"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSMiniCoinPool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     sAccountSMiniCoinPoolMiniCoinPool
     
     - parameter id: (path) id 
     - parameter body: (body) body 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPUT(id: Int64, body: String, completion: @escaping ((_ data: ResourceSMiniCoinPool?,_ error: Error?) -> Void)) {
        sAccountSMiniCoinPoolMiniCoinPoolUsingPUTWithRequestBuilder(id: id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     sAccountSMiniCoinPoolMiniCoinPool
     - PUT /sAccountSMiniCoinPools/{id}/miniCoinPool
     - examples: [{output=none}]
     
     - parameter id: (path) id 
     - parameter body: (body) body 

     - returns: RequestBuilder<ResourceSMiniCoinPool> 
     */
    open class func sAccountSMiniCoinPoolMiniCoinPoolUsingPUTWithRequestBuilder(id: Int64, body: String) -> RequestBuilder<ResourceSMiniCoinPool> {
        var path = "/sAccountSMiniCoinPools/{id}/miniCoinPool"
        path = path.replacingOccurrences(of: "{id}", with: "\(id)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ResourceSMiniCoinPool>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
